# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile

play {
  # Secret key
  # http://www.playframework.com/documentation/latest/ApplicationSecret
  # ~~~~~
  # The secret key is used to sign Play's session cookie and CSRF token.
  # This must be changed for production, but we don't recommend you change it in this file.
  secret.key = "changeme"

  # The application languages
  # https://www.playframework.com/documentation/latest/JavaI18N
  # ~~~~~
  i18n {
    langs = ["ja"]
  }

  # Router file to use
  # ~~~~~
  # For /dev/ routes, this will be the contents of /conf/routes
  # For /prod/ routes, this will be the public directory for your application
  # Default: routes
  # play.http.router = prod.Routes

  # Database configuration
  # https://www.playframework.com/documentation/latest/ScalaDatabase
  # https://www.playframework.com/documentation/latest/JavaDatabase
  # ~~~~~
  # You can declare as many datasources as you want.
  # By convention, the default datasource is named "default"
  #
  # db.default {
  #   url = "jdbc:postgresql://localhost:5432/tea_growth_record"
  #   driver = org.postgresql.Driver
  #   user = "postgres"
  #   password = "postgres"
  # }

  # Slick configuration
  # ~~~~~
  slick.dbs.default {
    profile = "slick.jdbc.MySQLProfile$"
    db {
      url = "jdbc:mysql://localhost:3306/tea_growth_record?useSSL=false&serverTimezone=UTC"
      user = "root"
      password = "root"
      driver = "com.mysql.cj.jdbc.Driver"
    }
  }

  # Evolutions
  # https://www.playframework.com/documentation/latest/Evolutions
  # ~~~~~
  # Evolutions allow you to safely upgrade your database schema as your application evolves.
  # Read the documentation for more information.
  play.evolutions {
    # You can disable evolutions for a specific datasource if necessary
    # default.enabled = false
  }

  # CSRF configuration
  # https://www.playframework.com/documentation/latest/ScalaCsrf
  # ~~~~~
  csrf {
    cookie.name = "Csrf-Token"
    header.name = "Csrf-Token"
    token.name = "csrfToken"
  }

  # Server configuration
  # https://www.playframework.com/documentation/latest/ConfigFile#Server-configuration
  # ~~~~~
  server {
    http {
      port = 9000
      address = "0.0.0.0"
    }
  }

  # Assets configuration
  # https://www.playframework.com/documentation/latest/Assets
  # ~~~~~
  assets {
    path = "/public"
    urlPrefix = "/assets"
  }

  # Filter configuration
  # ~~~~~
  filters {
    enabled += "play.filters.cors.CORSFilter"
    enabled += "play.filters.csrf.CSRFFilter"
  }
}

# Akka
# https://www.playframework.com/documentation/latest/ScalaAkka
# ~~~~~
# Play uses Akka for its internal actor system.
# The actor system name can be changed here:
# akka {
#   system = "my-system"
# }
# Also include logging configuration:
akka {
  log-dead-letters = off
  log-dead-letters-during-shutdown = off
}

# Logging configuration
# https://www.playframework.com/documentation/latest/SettingsLogger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = INFO

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

# Application specific configuration
app {
  upload {
    maxSize = 10MB
    allowedExtensions = ["jpg", "jpeg", "png", "gif"]
  }
}

# Number of database connections
# ~~~~~
fixedConnectionPool = 9

# Set Hikari to fixed size
play.db {
  prototype {
    hikaricp.minimumIdle = ${fixedConnectionPool}
    hikaricp.maximumPoolSize = ${fixedConnectionPool}
  }
}

# Job queue sized to HikariCP connection pool
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

# Filter configuration
# ~~~~~
play.filters.cors {
  allowedOrigins = ["http://localhost:9000"]
  allowedHttpMethods = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
  allowedHttpHeaders = ["Accept", "Content-Type", "Origin", "X-Requested-With"]
  preflightMaxAge = 3 days
}

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key = "changeme"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
play.evolutions.enabled = true
play.evolutions.autoApply = true

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing a logger.xml file in the conf directory.

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG 