# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Scala CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Clear all caches first
      run: |
        rm -rf ~/.sbt ~/.ivy2 ~/.cache/coursier
        rm -rf project/target target
        rm -rf server/project/target server/target
        rm -rf server/target/streams server/target/scala-2.13
        rm -rf node_modules package-lock.json
        rm -rf ~/.npm ~/.node-gyp
        find . -name "target" -type d -exec rm -rf {} + 2>/dev/null || true
        find . -name ".sbt" -type d -exec rm -rf {} + 2>/dev/null || true
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'sbt'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install npm (latest) and verify
      run: |
        # Remove any existing npm installation
        rm -rf /usr/local/bin/npm /usr/local/bin/npx
        rm -rf ~/.npm ~/.node-gyp
        
        # Install npm using Node.js built-in method
        curl -fsSL https://raw.githubusercontent.com/npm/cli/latest/scripts/install.sh | sh
        
        # Verify installation
        npm --version
        node --version
        
        # Clean and reinstall npm
        npm install -g npm@latest
        npm --version
        
        # Final verification
        echo "NPM version check: $(npm --version)"
        echo "Node version check: $(node --version)"
        
        # Clean npm cache
        npm cache clean --force
        
    - name: Setup sbt
      uses: sbt/setup-sbt@v1
        
    - name: Cache sbt dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier/cache/v1
          project/target
          target
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/project/build.properties') }}-cache-v2
        restore-keys: |
          ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-
          ${{ runner.os }}-sbt-
          
    - name: Clean and update dependencies
      run: |
        # Force clean all SBT caches and artifacts
        rm -rf ~/.sbt/1.0/target
        rm -rf ~/.sbt/0.13/target
        rm -rf ~/.ivy2/cache
        rm -rf ~/.coursier/cache
        
        # Clean and reload projects
        sbt clean
        sbt reload
        sbt update
        
        # Clean server project
        cd server && sbt clean
        cd server && sbt reload
        cd server && sbt update
        
        # Verify dependencies
        sbt "show libraryDependencies" | grep play-json-joda
        cd server && sbt "show libraryDependencies" | grep play-json-joda
        
    - name: Compile (Root project)
      run: sbt compile
        
    - name: Compile (Server project)
      run: cd server && sbt compile
        
    - name: Run tests (Root project)
      run: sbt test
        
    - name: Run tests (Server project)
      run: cd server && sbt test
      
    - name: Upload dependency graph
      uses: scalacenter/sbt-dependency-submission@ab086b50c947c9774b70f39fc7f6e20ca2706c91
