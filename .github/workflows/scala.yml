# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Scala CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Verify project structure
      run: |
        echo "=== Current directory ==="
        pwd
        echo "=== Project root contents ==="
        ls -la
        echo "=== package-lock.json status ==="
        if [ -f "package-lock.json" ]; then
          echo "✅ package-lock.json exists"
          ls -la package-lock.json
          echo "File size: $(wc -c < package-lock.json) bytes"
        else
          echo "❌ package-lock.json not found!"
        fi
        echo "=== package.json status ==="
        if [ -f "package.json" ]; then
          echo "✅ package.json exists"
          ls -la package.json
        else
          echo "❌ package.json not found!"
        fi
      
    - name: Clear all caches first
      run: |
        rm -rf node_modules
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'sbt'
        
    - name: Skip npm installation (Web assets disabled)
      run: |
        echo "=== Skipping npm installation ==="
        echo "Web assets processing has been disabled in build.sbt"
        echo "No npm installation required for this build"
        
    - name: Skip npm dependencies (Web assets disabled)
      run: |
        echo "=== Skipping npm dependencies ==="
        echo "Web assets processing has been disabled in build.sbt"
        echo "No npm dependencies required for this build"
        
    - name: Setup sbt
      uses: sbt/setup-sbt@v1
        
    - name: Cache sbt dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier/cache/v1
          project/target
          target
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/project/build.properties') }}-cache-v2
        restore-keys: |
          ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-
          ${{ runner.os }}-sbt-
          
    - name: Clean and update dependencies
      run: |
        # Clean and update dependencies
        sbt "set Assets / jseNpmNodeModules := Nil; set Web-assets / jseNpmNodeModules := Nil; set Web-assets-test / jseNpmNodeModules := Nil; set Assets / npmNodeModules := Nil; set Web-assets / npmNodeModules := Nil; set Web-assets-test / npmNodeModules := Nil; set Assets / pipelineStages := Nil; set pipelineStages := Nil" clean update
        
        # Verify dependencies - show actual resolved versions
        echo "=== Project dependencies ==="
        sbt "show libraryDependencies" | grep -E "(play-|scala-xml)" || echo "No Play Framework dependencies found"
        
    - name: Compile project
      run: sbt "set Assets / jseNpmNodeModules := Nil; set Web-assets / jseNpmNodeModules := Nil; set Web-assets-test / jseNpmNodeModules := Nil; set Assets / npmNodeModules := Nil; set Web-assets / npmNodeModules := Nil; set Web-assets-test / npmNodeModules := Nil; set Assets / pipelineStages := Nil; set pipelineStages := Nil" compile
        
    - name: Run tests
      run: sbt "set Assets / jseNpmNodeModules := Nil; set Web-assets / jseNpmNodeModules := Nil; set Web-assets-test / jseNpmNodeModules := Nil; set Assets / npmNodeModules := Nil; set Web-assets / npmNodeModules := Nil; set Web-assets-test / npmNodeModules := Nil; set Assets / pipelineStages := Nil; set pipelineStages := Nil" test
      
    - name: Upload dependency graph
      uses: scalacenter/sbt-dependency-submission@ab086b50c947c9774b70f39fc7f6e20ca2706c91
